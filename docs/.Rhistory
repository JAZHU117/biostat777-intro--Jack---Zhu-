"Weekend",
NA_character_
)
))
library (dplyr)
##Selecting Relevant Variables
numbats.1 <-numbats.0 %>% select(scientificName, recordID, dataResourceName, year, month, wday, hour, day, dryandra, prcp, tmax, tmin)
##Arranging Data Set From Earliest to Latest Sighting
numbats.2 <-numbats.1 %>%
arrange (scientificName, day,dataResourceName)
##Viewing Arragned Data Set
numbats.2 [1:12, 1:12]
##Creating a New Seasons and Dtetime Variable
##I used ChatGPT to fix the syntax in my nested if_else statement
##These two nested mutate and if_else statements dictate the following:
## 1. If the value for month is Dec", "Jan", or "Feb," then the value for the new variable, season is "Winter; if the value for month is "Mar", "Apr", or "May," then the value for the new variable, season, is "Spring; if the value for month is "Jun", "Jul", or "Aug," then the value for the new variable, season, is "Summer"; if the value for month is "Sep", "Oct", or "Nov," then the value for the new variable, season, is "Fall". If the value for month is missing, then the value for season is NA.
##2. If the value for wday is "Mon", "Tue", "Wed", "Thu", or "Fri," then the new variable, timewk, (which has a vaue of Weekday or Weekend) has a value of "Weekday". If the value for wday is Sat" or "Sun," then the new variable, timewk, has a value of "Weekend". If the value for wday is missing, then the new variable, timewk, has a value of NA.
numbats.3 <- numbats.2 %>%
mutate(season = if_else(
month %in% c("Dec", "Jan", "Feb"), "Winter",
if_else(
month %in% c("Mar", "Apr", "May"), "Spring",
if_else(
month %in% c("Jun", "Jul", "Aug"), "Summer",
if_else(
month %in% c("Sep", "Oct", "Nov"), "Fall",
NA_character_
)
)
)
)) %>%
mutate(timewk = if_else(
wday %in% c("Mon", "Tue", "Wed", "Thu", "Fri"),
"Weekday",
if_else(
wday %in% c("Sat", "Sun"),
"Weekend",
NA_character_
)
))
table (hour$numbats.3)
library (dplyr)
##Selecting Relevant Variables
numbats.1 <-numbats.0 %>% select(scientificName, recordID, dataResourceName, year, month, wday, hour, day, dryandra, prcp, tmax, tmin)
##Arranging Data Set From Earliest to Latest Sighting
numbats.2 <-numbats.1 %>%
arrange (scientificName, day,dataResourceName)
##Viewing Arragned Data Set
numbats.2 [1:12, 1:12]
##Creating a New Seasons and Dtetime Variable
##I used ChatGPT to fix the syntax in my nested if_else statement
##These two nested mutate and if_else statements dictate the following:
## 1. If the value for month is Dec", "Jan", or "Feb," then the value for the new variable, season is "Winter; if the value for month is "Mar", "Apr", or "May," then the value for the new variable, season, is "Spring; if the value for month is "Jun", "Jul", or "Aug," then the value for the new variable, season, is "Summer"; if the value for month is "Sep", "Oct", or "Nov," then the value for the new variable, season, is "Fall". If the value for month is missing, then the value for season is NA.
##2. If the value for wday is "Mon", "Tue", "Wed", "Thu", or "Fri," then the new variable, timewk, (which has a vaue of Weekday or Weekend) has a value of "Weekday". If the value for wday is Sat" or "Sun," then the new variable, timewk, has a value of "Weekend". If the value for wday is missing, then the new variable, timewk, has a value of NA.
numbats.3 <- numbats.2 %>%
mutate(season = if_else(
month %in% c("Dec", "Jan", "Feb"), "Winter",
if_else(
month %in% c("Mar", "Apr", "May"), "Spring",
if_else(
month %in% c("Jun", "Jul", "Aug"), "Summer",
if_else(
month %in% c("Sep", "Oct", "Nov"), "Fall",
NA_character_
)
)
)
)) %>%
mutate(timewk = if_else(
wday %in% c("Mon", "Tue", "Wed", "Thu", "Fri"),
"Weekday",
if_else(
wday %in% c("Sat", "Sun"),
"Weekend",
NA_character_
)
))
table (numbats.3$hour)
library (dplyr)
##Selecting Relevant Variables
numbats.1 <-numbats.0 %>% select(scientificName, recordID, dataResourceName, year, month, wday, hour, day, dryandra, prcp, tmax, tmin)
##Arranging Data Set From Earliest to Latest Sighting
numbats.2 <-numbats.1 %>%
arrange (scientificName, day,dataResourceName)
##Viewing Arragned Data Set
numbats.2 [1:12, 1:12]
##Creating a New Seasons and Dtetime Variable
##I used ChatGPT to fix the syntax in my nested if_else statement
##These two nested mutate and if_else statements dictate the following:
## 1. If the value for month is Dec", "Jan", or "Feb," then the value for the new variable, season is "Winter; if the value for month is "Mar", "Apr", or "May," then the value for the new variable, season, is "Spring; if the value for month is "Jun", "Jul", or "Aug," then the value for the new variable, season, is "Summer"; if the value for month is "Sep", "Oct", or "Nov," then the value for the new variable, season, is "Fall". If the value for month is missing, then the value for season is NA.
##2. If the value for wday is "Mon", "Tue", "Wed", "Thu", or "Fri," then the new variable, timewk, (which has a vaue of Weekday or Weekend) has a value of "Weekday". If the value for wday is Sat" or "Sun," then the new variable, timewk, has a value of "Weekend". If the value for wday is missing, then the new variable, timewk, has a value of NA.
numbats.3 <- numbats.2 %>%
mutate(season = if_else(
month %in% c("Dec", "Jan", "Feb"), "Winter",
if_else(
month %in% c("Mar", "Apr", "May"), "Spring",
if_else(
month %in% c("Jun", "Jul", "Aug"), "Summer",
if_else(
month %in% c("Sep", "Oct", "Nov"), "Fall",
NA_character_
)
)
)
)) %>%
mutate(timewk = if_else(
wday %in% c("Mon", "Tue", "Wed", "Thu", "Fri"),
"Weekday",
if_else(
wday %in% c("Sat", "Sun"),
"Weekend",
NA_character_
)
))
count (numbats.3$hour)
count (hour)
library (dplyr)
##Selecting Relevant Variables
numbats.1 <-numbats.0 %>% select(scientificName, recordID, dataResourceName, year, month, wday, hour, day, dryandra, prcp, tmax, tmin)
##Arranging Data Set From Earliest to Latest Sighting
numbats.2 <-numbats.1 %>%
arrange (scientificName, day,dataResourceName)
##Viewing Arragned Data Set
numbats.2 [1:12, 1:12]
##Creating a New Seasons and Dtetime Variable
##I used ChatGPT to fix the syntax in my nested if_else statement
##These two nested mutate and if_else statements dictate the following:
## 1. If the value for month is Dec", "Jan", or "Feb," then the value for the new variable, season is "Winter; if the value for month is "Mar", "Apr", or "May," then the value for the new variable, season, is "Spring; if the value for month is "Jun", "Jul", or "Aug," then the value for the new variable, season, is "Summer"; if the value for month is "Sep", "Oct", or "Nov," then the value for the new variable, season, is "Fall". If the value for month is missing, then the value for season is NA.
##2. If the value for wday is "Mon", "Tue", "Wed", "Thu", or "Fri," then the new variable, timewk, (which has a vaue of Weekday or Weekend) has a value of "Weekday". If the value for wday is Sat" or "Sun," then the new variable, timewk, has a value of "Weekend". If the value for wday is missing, then the new variable, timewk, has a value of NA.
numbats.3 <- numbats.2 %>%
mutate(season = if_else(
month %in% c("Dec", "Jan", "Feb"), "Winter",
if_else(
month %in% c("Mar", "Apr", "May"), "Spring",
if_else(
month %in% c("Jun", "Jul", "Aug"), "Summer",
if_else(
month %in% c("Sep", "Oct", "Nov"), "Fall",
NA_character_
)
)
)
)) %>%
mutate(timewk = if_else(
wday %in% c("Mon", "Tue", "Wed", "Thu", "Fri"),
"Weekday",
if_else(
wday %in% c("Sat", "Sun"),
"Weekend",
NA_character_
)
))
numbats.3 %>%
count(hour)
#Exploring the Data Set
dim (numbats)
str (numbats)
##There are 16 variables in the data set and 805 observations.
numbats.3 %>%
count(hour)
library (ggplot)
install.packages ("ggplot")
R.version
install.packages ("ggplot2")
install.packages ("ggplot2")
library ("ggplot2")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame (table(hour))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-numbats.3 %>%
count(hour)
View(numbat_ct)
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
View(numbat_ct)
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
ggplot(freq_table, aes(x = data, y = Freq)) +
geom_bar(stat = "identity") +
labs(title = "Numbat Spottings at Different Hours of Day", x = "Hour", y = "# of Spottings (Frequency)")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
ggplot(numbat_ct, aes(x = data, y = Freq)) +
geom_bar(stat = "identity") +
labs(title = "Numbat Spottings at Different Hours of Day", x = "Hour", y = "# of Spottings (Frequency)")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
ggplot(numbat_ct, aes(x = numbat_ct, y = Freq)) +
geom_bar(stat = "identity") +
labs(title = "Numbat Spottings at Different Hours of Day", x = "Hour", y = "# of Spottings (Frequency)")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
ggplot(numbat_ct, aes(x = numbats.3$hour, y = Freq)) +
geom_bar(stat = "identity") +
labs(title = "Numbat Spottings at Different Hours of Day", x = "Hour", y = "# of Spottings (Frequency)")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
ggplot(numbat_ct, aes(x = hour, y = Freq)) +
geom_bar(stat = "identity") +
labs(title = "Numbat Spottings at Different Hours of Day", x = "Hour", y = "# of Spottings (Frequency)")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
str(numbat_ct)
ggplot(numbat_ct, aes(x = hour, y = Freq)) +
geom_bar(stat = "identity") +
labs(title = "Numbat Spottings at Different Hours of Day", x = "Hour", y = "# of Spottings (Frequency)")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
str(numbat_ct)
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
strnumbat_ct
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
str(numbat_ct)
numbat_ct$hour <- as.numeric(as.character(numbat_ct$hour))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
str(numbats.3$hour)
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
str(numbats.3$hour)
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct<-as.data.frame(table(numbats.3$hour))
str (numbat_ct)
str(numbats.3$hour)
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
View(numbat_ct)
##Renaming Column Names of Frequency Table
colnames(freq_table) <- c("Hour", "Frequency of Numbat Spottings")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency of Numbat Spottings")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency of Numbat Spottings")
ggplot(numbat_ct, aes(x = hour, y = frequency)) +
geom_bar(stat = "identity") +
labs(title = "Bar Plot of Pre-computed Frequencies", x = "Category", y = "Frequency")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency of Spottings")
View(numbat_ct)
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency of Spottings")
ggplot(numbat_ct, aes(x = Hour, y = Frequency of Spottings)) +
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency)) +
geom_bar(stat = "identity") +
labs(title = "Frequency of Numbat Spottings", x = "Hour", y = "Frequency of Spottings")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency)) +
geom_bar(stat = "identity") +
labs(title = "Frequency of Numbat Spottings", x = "Hour", y = "Frequency of Spottings")+theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency)) +
geom_bar(stat = "identity") +
labs(title = "Number of Numbat Spottings", x = "Hour", y = "Frequency")+theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill=Hour)) +
geom_bar(stat = "identity") +
labs(title = "Number of Numbat Spottings", x = "Hour", y = "Frequency")+theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill=Frequency)) +
geom_bar(stat = "identity") +
labs(title = "Number of Numbat Spottings", x = "Hour", y = "Frequency")+theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill=Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = "lightblue", high = "darkblue")
labs(title = "Number of Numbat Spottings", x = "Hour", y = "Frequency")+theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill=Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = "lightblue", high = "darkblue")
labs(title = "Number of Numbat Spottings", x = "Hour", y = "Frequency")+theme(plot.title = element_text(hjust = 0.5))
View(numbat_ct)
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient2(low = "yellow", mid = "orange", high = "red") +
labs(title = "Bar Plot with Custom Gradient Fill", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_viridis(option = "C") +  # Viridis color scale
labs(title = "Bar Plot with Viridis Color Fill", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +  # Gradient from light to dark blue
labs(title = "Bar Plot with Fill Based on Frequency", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient2(low = "lightgoldenrodyellow", mid = "orange", high = "red") +  # Custom gradient
labs(title = "Bar Plot with Custom Gradient Fill", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient2(low = "lightgoldenrodyellow", mid = "darkorange", high = "red") +  # Custom gradient
labs(title = "Bar Plot with Custom Gradient Fill", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
midpoint_value <- median(numbat_ct$Frequency)
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient2(low = "lightyellow", mid = "darkorange", high = "darkred") +  # Custom gradient
labs(title = "Numbat Spottings Throughout the Day", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
midpoint_value <- median(numbat_ct$Frequency)
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient2(low = "lightyellow", mid = "darkorange", high = "red") +  # Custom gradient
labs(title = "Numbat Spottings Throughout the Day", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
midpoint_value <- median(numbat_ct$Frequency)
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient2(low = "lightyellow", mid = "darkorange", high = "red") +  # Custom gradient
labs(title = "Numbat Spottings Throughout the Day", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))+guides(fill = "none")
library ("ggplot2")
##Creating a Frequency Table of # of Numbat Spottings and Time of Day
numbat_ct <- as.data.frame(table(numbats.3$hour))
##Renaming Column Names of Frequency Table
colnames(numbat_ct) <- c("Hour", "Frequency")
midpoint_value <- median(numbat_ct$Frequency)
ggplot(numbat_ct, aes(x = Hour, y = Frequency, fill = Frequency)) +
geom_bar(stat = "identity") +
scale_fill_gradient2(low = "lightyellow", mid = "darkorange", high = "red") +  # Custom gradient
labs(title = "Numbat Spottings Throughout the Day", x = "Hour", y = "Frequency of Spottings") +
theme(plot.title = element_text(hjust = 0.5))
numbats.3 %>%
count(hour) %>%
mutate(prop = prop.table(n))
numbats.3 %>%
count(hour) %>%
numbat_ct_total <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n) %>%
bind_rows(tibble(Hour = "Total", Frequency = sum(numbats.3$hour)))  # Add total row
numbat_ct_total <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n) %>%
# Add total row
# Round frequencies to 1 decimal place (if needed)
numbat_ct_rounded <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n) %>%
mutate(Frequency = round(Frequency, 1))
numbat_ct_total <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n) %>%
# Add total row
numbat_ct_total <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n) %>%
# Add total row
numbat_ct_total <- numbats.3 %>%
count(hour) %>%              # Count the occurrences of each hour
rename(Hour = hour, Frequency = n) %>%
numbat_ct_total <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n)
View(numbat_ct_total)
##Generating a Frequency Table for the # of Numbat Spottings at Specific Hours of Day
numbat_ct_total <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n)
#Providing a Title for the Frequency Table
cat("Frequency of Numbat Sightings")
#Printing Frequency Table
print(numbat_ct_total)
##Generating a Frequency Table for the # of Numbat Spottings at Specific Hours of Day
numbat_freq <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n)
#Providing a Title for the Frequency Table
cat("Frequency of Numbat Sightings")
#Printing Frequency Table
print(numbat_freq)
##Generating a Frequency Table for the # of Numbat Spottings at Specific Hours of Day
numbat_freq <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n)
#Providing a Title for the Frequency Table
cat("Frequency of Numbat Sightings")
print(numbat_freq)
#Printing Frequency Table
##Generating a Frequency Table for the # of Numbat Spottings at Specific Hours of Day
numbat_freq <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n)
##Generating a Frequency Table for the # of Numbat Spottings at Specific Hours of Day
numbat_freq <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n)
##Generating a Frequency Table for the # of Numbat Spottings at Specific Hours of Day
numbat_freq <- numbats.3 %>%
count(hour) %>%
rename(Hour = hour, Frequency = n)
##Printing Frequency Table
print(numbat_freq)
#Exploring the Data Set
dim (numbats)
str (numbats)
##There are 16 variables in the data set and 805 observations.
numbats.3 %>%
count(hour)
#Exploring the Data Set
dim (numbats.0)
str (numbats.0)
##There are 16 variables in the data set and 805 observations.
numbats.3 %>%
count(hour)
#Exploring the Data Set
dim (numbats.0)
str (numbats.0)
##There are 16 variables in the data set and 805 observations.
